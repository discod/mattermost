// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.IconButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: var(--radius-s);
  cursor: pointer;
  outline: none;
  transition: all 0.15s ease-out;
  background-color: transparent;
  
  // Focus states matching Button component
  &:focus {
    box-shadow: 0 0 0 2px var(--sidebar-text-active-border);
  }
  
  &:focus:not(:focus-visible) {
    box-shadow: none;
  }
  
  &:focus-visible {
    box-shadow: 0 0 0 2px var(--sidebar-text-active-border);
  }

  // Default state - quaternary button behavior
  color: var(--link-color);
  
  &:hover:not(:disabled) {
    background-color: rgba(var(--link-color-rgb), 0.08);
    color: rgba(var(--link-color-rgb), 0.88);
  }
  
  &:active:not(:disabled) {
    background-color: rgba(var(--link-color-rgb), 0.16);
    color: var(--button-bg);
  }
  
  // Toggled state (primary button colors)
  &--toggled {
    background-color: var(--button-bg);
    color: var(--button-color);
    
    &:hover:not(:disabled) {
      background-color: color-mix(in srgb, var(--button-bg) 88%, black 12%);
    }
    
    &:active:not(:disabled) {
      background-color: color-mix(in srgb, var(--button-bg) 80%, black 20%);
    }
  }
  
  // Destructive variant
  &--destructive {
    color: var(--error-text);
    
    &:hover:not(:disabled) {
      background-color: rgba(var(--error-text-color-rgb), 0.08);
      color: var(--error-text);
    }
    
    &:active:not(:disabled) {
      background-color: rgba(var(--error-text-color-rgb), 0.16);
      color: var(--error-text);
    }
  }
  
  // Inverted style (quaternary inverted pattern)
  &--inverted {
    color: rgba(var(--button-color-rgb), 0.75);
    
    &:hover:not(:disabled) {
      background-color: rgba(var(--button-color-rgb), 0.08);
      color: rgba(var(--button-color-rgb), 0.88);
    }
    
    &:active:not(:disabled) {
      background-color: rgba(var(--button-color-rgb), 0.16);
      color: var(--button-color);
    }
  }
  
  // Rounded variant
  &--rounded {
    border-radius: 50%;
  }
  
  // Size variants with default and compact padding
  &--xs {
    padding: 6px;
    
    &.IconButton--compact {
      padding: 4px;
    }
    
    .IconButton__icon {
      width: 12px;
      height: 12px;
    }
  }
  
  &--sm {
    padding: 8px;
    
    &.IconButton--compact {
      padding: 6px;
    }
    
    .IconButton__icon {
      width: 14px;
      height: 14px;
    }
  }
  
  &--md {
    padding: 10px;
    
    &.IconButton--compact {
      padding: 8px;
    }
    
    .IconButton__icon {
      width: 16px;
      height: 16px;
    }
  }
  
  &--lg {
    padding: 12px;
    
    &.IconButton--compact {
      padding: 10px;
    }
    
    .IconButton__icon {
      width: 20px;
      height: 20px;
    }
  }
  
  // Disabled state
  &:disabled {
    cursor: not-allowed;
    color: rgba(var(--center-channel-color-rgb), 0.32);
    background-color: transparent;
    
    &.IconButton--inverted {
      color: rgba(var(--button-color-rgb), 0.32);
    }
  }
}

// Icon container
.IconButton__icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 0;
}

// Spinner (reusing Button component patterns)
.IconButton__spinner {
  display: inline-block;
  border-radius: 50%;
  animation: spin 750ms linear infinite;
  background: conic-gradient(rgba(var(--center-channel-color-rgb), 0), rgba(var(--center-channel-color-rgb), 0.48));
  line-height: 0;
  
  &--xs { 
    width: 12px; 
    height: 12px;
    mask-image: radial-gradient(farthest-side, transparent calc(100% - 1.5px), #fff calc(100% - 1px));
  }
  
  &--sm { 
    width: 14px; 
    height: 14px;
    mask-image: radial-gradient(farthest-side, transparent calc(100% - 1.5px), #fff calc(100% - 1px));
  }
  
  &--md { 
    width: 16px; 
    height: 16px;
    mask-image: radial-gradient(farthest-side, transparent calc(100% - 2px), #fff calc(100% - 1.5px));
  }
  
  &--lg { 
    width: 20px; 
    height: 20px;
    mask-image: radial-gradient(farthest-side, transparent calc(100% - 2.5px), #fff calc(100% - 2px));
  }
  
  &--inverted {
    background: conic-gradient(rgba(var(--button-color-rgb), 0), rgba(var(--button-color-rgb), 0.48));
  }
}