// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/sidebar/sidebar_channel/sidebar_base_channel should match snapshot 1`] = `
<Connect(Connect(injectIntl(SidebarChannelLink)))
  ariaLabelPrefix="public channel"
  channel={
    Object {
      "create_at": 0,
      "creator_id": "",
      "delete_at": 0,
      "display_name": "channel_display_name",
      "group_constrained": false,
      "header": "",
      "id": "channel_id",
      "last_post_at": 0,
      "last_root_post_at": 0,
      "name": "",
      "purpose": "",
      "scheme_id": "",
      "team_id": "",
      "type": "O",
      "update_at": 0,
    }
  }
  channelLeaveHandler={[Function]}
  icon={
    <SidebarBaseChannelIcon
      channelType="O"
    />
  }
  intl={
    Object {
      "$t": [Function],
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "defaultRichTextElements": undefined,
      "fallbackOnEmptyString": true,
      "formatDate": [Function],
      "formatDateTimeRange": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatList": [Function],
      "formatListToParts": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "onWarn": [Function],
      "textComponent": "span",
      "timeZone": "Etc/UTC",
    }
  }
  label="channel_display_name"
  link="/team_name/channels/"
/>
`;

exports[`components/sidebar/sidebar_channel/sidebar_base_channel should match snapshot when private channel 1`] = `
<Connect(Connect(injectIntl(SidebarChannelLink)))
  ariaLabelPrefix="private channel"
  channel={
    Object {
      "create_at": 0,
      "creator_id": "",
      "delete_at": 0,
      "display_name": "channel_display_name",
      "group_constrained": false,
      "header": "",
      "id": "channel_id",
      "last_post_at": 0,
      "last_root_post_at": 0,
      "name": "",
      "purpose": "",
      "scheme_id": "",
      "team_id": "",
      "type": "P",
      "update_at": 0,
    }
  }
  channelLeaveHandler={[Function]}
  icon={
    <SidebarBaseChannelIcon
      channelType="P"
    />
  }
  intl={
    Object {
      "$t": [Function],
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "defaultRichTextElements": undefined,
      "fallbackOnEmptyString": true,
      "formatDate": [Function],
      "formatDateTimeRange": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatList": [Function],
      "formatListToParts": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "onWarn": [Function],
      "textComponent": "span",
      "timeZone": "Etc/UTC",
    }
  }
  label="channel_display_name"
  link="/team_name/channels/"
/>
`;

exports[`components/sidebar/sidebar_channel/sidebar_base_channel should match snapshot when shared channel 1`] = `
<Connect(Connect(injectIntl(SidebarChannelLink)))
  ariaLabelPrefix="public channel"
  channel={
    Object {
      "create_at": 0,
      "creator_id": "",
      "delete_at": 0,
      "display_name": "channel_display_name",
      "group_constrained": false,
      "header": "",
      "id": "channel_id",
      "last_post_at": 0,
      "last_root_post_at": 0,
      "name": "",
      "purpose": "",
      "scheme_id": "",
      "shared": true,
      "team_id": "",
      "type": "O",
      "update_at": 0,
    }
  }
  channelLeaveHandler={[Function]}
  icon={
    <SidebarBaseChannelIcon
      channelType="O"
    />
  }
  intl={
    Object {
      "$t": [Function],
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "defaultRichTextElements": undefined,
      "fallbackOnEmptyString": true,
      "formatDate": [Function],
      "formatDateTimeRange": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatList": [Function],
      "formatListToParts": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "onWarn": [Function],
      "textComponent": "span",
      "timeZone": "Etc/UTC",
    }
  }
  isSharedChannel={true}
  label="channel_display_name"
  link="/team_name/channels/"
/>
`;

exports[`components/sidebar/sidebar_channel/sidebar_base_channel should match snapshot when shared private channel 1`] = `
<Connect(Connect(injectIntl(SidebarChannelLink)))
  ariaLabelPrefix="private channel"
  channel={
    Object {
      "create_at": 0,
      "creator_id": "",
      "delete_at": 0,
      "display_name": "channel_display_name",
      "group_constrained": false,
      "header": "",
      "id": "channel_id",
      "last_post_at": 0,
      "last_root_post_at": 0,
      "name": "",
      "purpose": "",
      "scheme_id": "",
      "shared": true,
      "team_id": "",
      "type": "P",
      "update_at": 0,
    }
  }
  channelLeaveHandler={[Function]}
  icon={
    <SidebarBaseChannelIcon
      channelType="P"
    />
  }
  intl={
    Object {
      "$t": [Function],
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "defaultRichTextElements": undefined,
      "fallbackOnEmptyString": true,
      "formatDate": [Function],
      "formatDateTimeRange": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatList": [Function],
      "formatListToParts": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "onError": [Function],
      "onWarn": [Function],
      "textComponent": "span",
      "timeZone": "Etc/UTC",
    }
  }
  isSharedChannel={true}
  label="channel_display_name"
  link="/team_name/channels/"
/>
`;
