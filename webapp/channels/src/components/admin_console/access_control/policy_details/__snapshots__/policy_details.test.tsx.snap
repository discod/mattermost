// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/admin_console/access_control/policy_details/PolicyDetails should match snapshot with existing policy 1`] = `
<div
  className="wrapper--fixed AccessControlPolicySettings"
>
  <AdminHeader
    withBackButton={true}
  >
    <div>
      <Connect(Component)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/attribute_based_access_control"
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit Access Control Policy"
        id="admin.access_control.policy.editPolicyTitle"
      />
    </div>
  </AdminHeader>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="admin-console__setting-group"
      >
        <TextSetting
          id="policyName"
          inputClassName="col-sm-8"
          label="Access control policy name:"
          labelClassName="col-sm-4"
          onChange={[Function]}
          value=""
        />
        <Memo(BooleanSetting)
          helpText="All users matching the property values configured below will be added as members, and membership will be automatically maintained as user property values change."
          id="autoSyncMembership"
          label="Auto-sync membership based on access rules:"
          onChange={[Function]}
          setByEnv={false}
          value={false}
        />
      </div>
      <Card
        className="console"
        expanded={true}
      >
        <CardHeader>
          <TitleAndButtonCardHeader
            subtitle="Select user attributes and values as rules to restrict channel membership."
            title="Attribute based access rules"
          />
        </CardHeader>
        <CardBody>
          <div
            className="editor-tabs"
          >
            <button
              className="editor-tab "
              onClick={[Function]}
            >
              <MemoizedFormattedMessage
                defaultMessage="Simple Expressions"
                id="admin.access_control.editor.table"
              />
            </button>
            <button
              className="editor-tab active"
              onClick={[Function]}
            >
              <MemoizedFormattedMessage
                defaultMessage="Advanced Expressions"
                id="admin.access_control.editor.cel"
              />
            </button>
          </div>
          <CELEditor
            onChange={[Function]}
            onValidate={[Function]}
            value=""
          />
        </CardBody>
      </Card>
      <Card
        className="console add-channels"
        expanded={true}
      >
        <CardHeader>
          <TitleAndButtonCardHeader
            buttonText={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Add channels"
                id="admin.access_control.policy.edit_policy.channel_selector.addChannels"
              />
            }
            onClick={[Function]}
            subtitle={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Add channels that this property based access policy will apply to."
                id="admin.access_control.policy.edit_policy.channel_selector.subtitle"
              />
            }
            title={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Assigned channels"
                id="admin.access_control.policy.edit_policy.channel_selector.title"
              />
            }
          />
        </CardHeader>
        <CardBody
          expanded={true}
        >
          <Connect(ChannelList)
            channelsToAdd={Object {}}
            channelsToRemove={Object {}}
            onRemoveCallback={[Function]}
            onUndoRemoveCallback={[Function]}
            policyId="policy1"
          />
        </CardBody>
      </Card>
      <Card
        className="console delete-policy"
        expanded={true}
      >
        <CardHeader>
          <TitleAndButtonCardHeader
            buttonText={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Delete"
                id="admin.access_control.policy.edit_policy.delete_policy.delete"
              />
            }
            isDisabled={false}
            onClick={[Function]}
            subtitle={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="This policy will be deleted and cannot be recovered."
                id="admin.access_control.policy.edit_policy.delete_policy.subtitle"
              />
            }
            title={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Delete policy"
                id="admin.access_control.policy.edit_policy.delete_policy.title"
              />
            }
          />
        </CardHeader>
      </Card>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      defaultMessage={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Save"
          id="admin.access_control.edit_policy.save"
        />
      }
      disabled={true}
      onClick={[Function]}
    />
    <Connect(Component)
      className="btn btn-quaternary"
      to="/admin_console/user_management/attribute_based_access_control"
    >
      <MemoizedFormattedMessage
        defaultMessage="Cancel"
        id="admin.access_control.edit_policy.cancel"
      />
    </Connect(Component)>
  </div>
</div>
`;

exports[`components/admin_console/access_control/policy_details/PolicyDetails should match snapshot with new policy 1`] = `
<div
  className="wrapper--fixed AccessControlPolicySettings"
>
  <AdminHeader
    withBackButton={true}
  >
    <div>
      <Connect(Component)
        className="fa fa-angle-left back"
        to="/admin_console/user_management/attribute_based_access_control"
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit Access Control Policy"
        id="admin.access_control.policy.editPolicyTitle"
      />
    </div>
  </AdminHeader>
  <div
    className="admin-console__wrapper"
  >
    <div
      className="admin-console__content"
    >
      <div
        className="admin-console__setting-group"
      >
        <TextSetting
          id="policyName"
          inputClassName="col-sm-8"
          label="Access control policy name:"
          labelClassName="col-sm-4"
          onChange={[Function]}
          value=""
        />
        <Memo(BooleanSetting)
          helpText="All users matching the property values configured below will be added as members, and membership will be automatically maintained as user property values change."
          id="autoSyncMembership"
          label="Auto-sync membership based on access rules:"
          onChange={[Function]}
          setByEnv={false}
          value={false}
        />
      </div>
      <Card
        className="console"
        expanded={true}
      >
        <CardHeader>
          <TitleAndButtonCardHeader
            subtitle="Select user attributes and values as rules to restrict channel membership."
            title="Attribute based access rules"
          />
        </CardHeader>
        <CardBody>
          <div
            className="editor-tabs"
          >
            <button
              className="editor-tab "
              onClick={[Function]}
            >
              <MemoizedFormattedMessage
                defaultMessage="Simple Expressions"
                id="admin.access_control.editor.table"
              />
            </button>
            <button
              className="editor-tab active"
              onClick={[Function]}
            >
              <MemoizedFormattedMessage
                defaultMessage="Advanced Expressions"
                id="admin.access_control.editor.cel"
              />
            </button>
          </div>
          <CELEditor
            onChange={[Function]}
            onValidate={[Function]}
            value=""
          />
        </CardBody>
      </Card>
      <Card
        className="console add-channels"
        expanded={true}
      >
        <CardHeader>
          <TitleAndButtonCardHeader
            buttonText={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Add channels"
                id="admin.access_control.policy.edit_policy.channel_selector.addChannels"
              />
            }
            onClick={[Function]}
            subtitle={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Add channels that this property based access policy will apply to."
                id="admin.access_control.policy.edit_policy.channel_selector.subtitle"
              />
            }
            title={
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Assigned channels"
                id="admin.access_control.policy.edit_policy.channel_selector.title"
              />
            }
          />
        </CardHeader>
        <CardBody
          expanded={true}
        >
          <Connect(ChannelList)
            channelsToAdd={Object {}}
            channelsToRemove={Object {}}
            onRemoveCallback={[Function]}
            onUndoRemoveCallback={[Function]}
            policyId=""
          />
        </CardBody>
      </Card>
    </div>
  </div>
  <div
    className="admin-console-save"
  >
    <SaveButton
      defaultMessage={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Save"
          id="admin.access_control.edit_policy.save"
        />
      }
      disabled={true}
      onClick={[Function]}
    />
    <Connect(Component)
      className="btn btn-quaternary"
      to="/admin_console/user_management/attribute_based_access_control"
    >
      <MemoizedFormattedMessage
        defaultMessage="Cancel"
        id="admin.access_control.edit_policy.cancel"
      />
    </Connect(Component)>
  </div>
</div>
`;
