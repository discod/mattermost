name: Server Test Template
on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      datasource:
        required: true
        type: string
      drivername:
        required: true
        type: string
      logsartifact:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: ${{ inputs.name }}
    runs-on: ubuntu-latest
    env:
      COMPOSE_PROJECT_NAME: ghactions
    steps:
      - uses: chainguard-dev/setup-chainctl@main
        with:
          identity: ee399b4c72dd4e58e3d617f78fc47b74733c9557/922f2d48307d6f5f      

      - name: Checkout mattermost project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2        

      - name: Store required variables for publishing results
        run: |
          echo "${{ inputs.name }}" > server/test-name
          echo "${{ github.event.pull_request.number }}" > server/pr-number

      - name: Run docker compose
        run: |
          cd server/build
          docker compose --ansi never run --rm start_dependencies
          cat ../tests/test-data.ldif | docker compose --ansi never exec -T openldap bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest';
          docker compose --ansi never exec -T minio sh -c 'mkdir -p /data/mattermost-test';
          docker compose --ansi never ps

      - name: Run Tests
        env:
          # BUILD_IMAGE: mattermostdevelopment/mattermost-build-server:${{ steps.go.outputs.GO_VERSION }}
          BUILD_IMAGE: cgr.dev/mattermost.com/go-msft-fips:1.22-dev
        run: |
          if [[ ${{ github.ref_name }} == 'master' ]]; then
            export RACE_MODE="-race"
          fi
          docker run --net ghactions_mm-test \
            --entrypoint make \
            --ulimit nofile=8096:8096 \
            --env-file=server/build/dotenv/test.env \
            --env MM_SQLSETTINGS_DRIVERNAME="${{ inputs.drivername }}" \
            --env MM_SQLSETTINGS_DATASOURCE="${{ inputs.datasource }}" \
            --env TEST_DATABASE_MYSQL_DSN="${{ inputs.datasource }}" \
            --env TEST_DATABASE_POSTGRESQL_DSN="${{ inputs.datasource }}" \
            --env GOBIN=/root/go/bin \
            -v $PWD:/mattermost \
            -w /mattermost/server \
            $BUILD_IMAGE \
            test-server$RACE_MODE BUILD_NUMBER=$GITHUB_HEAD_REF-$GITHUB_RUN_ID

      - name: Stop docker compose
        run: |
          cd server/build
          docker compose --ansi never stop
          
      - name: Archive logs
        if: ${{ always() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.logsartifact }}
          path: |
            server/gotestsum.json
            server/report.xml
            server/test-name
            server/pr-number